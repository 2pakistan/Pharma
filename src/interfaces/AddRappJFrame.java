package interfaces;

import metier.FamilleMedoc;
import metier.Prescription;
import metier.Medoc;
import metier.Praticien;
import metier.Rapport;
import dao.PraticienDAO;
import dao.MedocDAO;
import dao.PrescriptionDAO;
import dao.RapportDAO;
import com.toedter.calendar.JDayChooser;
import com.toedter.calendar.JMonthChooser;
import com.toedter.calendar.JYearChooser;
import java.awt.FlowLayout;
import java.io.Console;
import java.util.ArrayList;
import java.sql.Date;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import technique.User;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sheitan666
 */
public class AddRappJFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddRappJFrame
     */
    public AddRappJFrame() {
        initComponents();

        //on vide les liste des choix par défaut insérer par netbeans GUI
        comboBoxPrat.removeAllItems();
        comboBoxMotif.removeAllItems();
        comboBoxFamille.removeAllItems();
        comboBoxMedoc.removeAllItems();
        comboBoxQte.removeAllItems();
        comboBoxCoef.removeAllItems();

        //Hidden motif complémentaire. Apparait uniquement si le motif 'Autre' est choisi dans la comboBoxMotif
        labelAreaMotif.setVisible(false);
        jScrollPane2.setVisible(false);

        //REMPLISSAGE DE LA LISTE DES PRATICIENS
        PraticienDAO praticien1 = new PraticienDAO();
        ArrayList<Praticien> listePraticiensDb = new ArrayList<>();
        listePraticiensDb = praticien1.getListePraticiens();
        int nbPraticiens = listePraticiensDb.size();

        for (int i = 0; i < nbPraticiens; i++) {
            String nomPrat = listePraticiensDb.get(i).getNom();
            comboBoxPrat.addItem(nomPrat);
        }

        //REMPLISSAGE DE LA LISTE DES MOTIFS
        String[] motifs = new String[]{"Rapport annuel", "Remontage", "Actualisation", "Autre"};
        comboBoxMotif.setModel(new javax.swing.DefaultComboBoxModel<>(motifs));

        //REMPLISSAGE DE LA LISTE DES FAMILLES
        MedocDAO meds = new MedocDAO();
        ArrayList<FamilleMedoc> listeFamillesDb = new ArrayList<>();
        listeFamillesDb = meds.findAllFamilles();
        int nbFamilles = listeFamillesDb.size();

        comboBoxFamille.addItem("");
        for (int i = 0; i < nbFamilles; i++) {
            String codeFamille = listeFamillesDb.get(i).getLibelle();
            comboBoxFamille.addItem(codeFamille);
        }

        //REMPLISSAGE DE LA LISTE DES COEFFICIENTS DE 0 A 10
        for (int i = 0; i <= 10; i++) {
            comboBoxCoef.addItem(i);
        }
        //REMPLISSAGE DE LA LISTE DES QUANTITES DE MEDICAMENTS DE 1 A 10
        for (int i = 1; i <= 10; i++) {
            comboBoxQte.addItem(i);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnValider = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnValidation = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnAddMedoc = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        try {
            comboBoxQte =(javax.swing.JComboBox)java.beans.Beans.instantiate(getClass().getClassLoader(), "interfaces.AddRappJFrame_comboBoxQte");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        comboBoxMedoc = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        comboBoxFamille = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        calendar = new com.toedter.calendar.JCalendar();
        comboBoxPrat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        try {
            comboBoxCoef =(javax.swing.JComboBox)java.beans.Beans.instantiate(getClass().getClassLoader(), "interfaces.AddRappJFrame_comboBoxCoef");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaBilan = new javax.swing.JTextArea();
        try {
            comboBoxMotif =(javax.swing.JComboBox)java.beans.Beans.instantiate(getClass().getClassLoader(), "interfaces.AddRappJFrame_comboBoxMotif");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaMotif = new javax.swing.JTextArea();
        labelAreaMotif = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        labelPrescription = new javax.swing.JLabel();
        comboPresc = new javax.swing.JComboBox<>();

        btnValider.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnValider.setText("Valider");
        btnValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValiderActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("NOUVEAU RAPPORT");

        btnValidation.setText("Valider le rapport");
        btnValidation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidationActionPerformed(evt);
            }
        });

        btnHome.setText("Accueil");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnAddMedoc.setText("Ajouter ce médicament");
        btnAddMedoc.setToolTipText("totot");
        btnAddMedoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMedocActionPerformed(evt);
            }
        });

        jLabel10.setText("Quantité");

        comboBoxMedoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Nom du médicament");

        comboBoxFamille.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxFamille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFamilleActionPerformed(evt);
            }
        });

        jLabel8.setText("Famille");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Médicaments présentés");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(113, Short.MAX_VALUE)
                        .addComponent(btnAddMedoc)
                        .addGap(103, 103, 103))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboBoxMedoc, javax.swing.GroupLayout.Alignment.LEADING, 0, 229, Short.MAX_VALUE)
                                    .addComponent(comboBoxFamille, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBoxQte, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxMedoc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxQte, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(btnAddMedoc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Nom du praticien visité");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Date de la visite");

        comboBoxPrat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxPrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPratActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Coefficient de confiance");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("bilan de la visite");

        textAreaBilan.setColumns(20);
        textAreaBilan.setRows(5);
        jScrollPane1.setViewportView(textAreaBilan);

        comboBoxMotif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMotifActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Motif de la visite");

        textAreaMotif.setColumns(20);
        textAreaMotif.setRows(5);
        jScrollPane2.setViewportView(textAreaMotif);

        labelAreaMotif.setText("informations complémentaires motif");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                .addGap(41, 41, 41)
                                .addComponent(comboBoxPrat, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calendar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboBoxMotif, 0, 221, Short.MAX_VALUE)
                                    .addComponent(comboBoxCoef, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(labelAreaMotif, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxPrat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxCoef, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxMotif, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelAreaMotif, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel2.setLayout(new java.awt.GridBagLayout());

        labelPrescription.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelPrescription.setText("Prescription");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(424, 424, 424)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(332, 332, 332)
                                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(915, 915, 915))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPrescription)
                            .addComponent(comboPresc, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(497, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPrescription)
                        .addGap(21, 21, 21)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboPresc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(225, 225, 225))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxFamilleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFamilleActionPerformed
        // TODO add your handling code here:
        MedocDAO meds2 = new MedocDAO();
        ArrayList<Medoc> listeMedocsDb = new ArrayList<>();

        if (comboBoxFamille.getItemCount() < 1) {

        } else if (comboBoxFamille.getSelectedItem().toString().equals("")) {
            comboBoxMedoc.removeAllItems();
        } else {
            comboBoxMedoc.removeAllItems();
            //on recupere la famille choisie dans la liste déroulante (format libelle)
            String libelleFamilleMedoc = comboBoxFamille.getSelectedItem().toString();
            //on utilise la methode findCodeByLibelle pour recuperer le code de la famille choisie
            String codeFamille = meds2.findCodeByLibelleFamille(libelleFamilleMedoc);

            // on recupere tous les methodes ayant ce code famille 
            listeMedocsDb = meds2.findMedocsByFamily(codeFamille);
            int nbMedocs = listeMedocsDb.size();

            for (int i = 0; i < nbMedocs; i++) {
                String nomMedoc = listeMedocsDb.get(i).getNomCommercial();
                comboBoxMedoc.addItem(nomMedoc);
            }
        }
    }//GEN-LAST:event_comboBoxFamilleActionPerformed

    private void btnValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValiderActionPerformed

    }//GEN-LAST:event_btnValiderActionPerformed

    private void comboBoxMotifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMotifActionPerformed
        // TODO add your handling code here:

        if (comboBoxMotif.getItemCount() < 1) {

        } else {
            String motifSelected = comboBoxMotif.getSelectedItem().toString();
            String autreMotif = "Autre";
            if (motifSelected.equals(autreMotif)) {
                labelAreaMotif.setVisible(true);
                jScrollPane2.setVisible(true);
            } else {
                labelAreaMotif.setVisible(false);
                jScrollPane2.setVisible(false);
            }
        }


    }//GEN-LAST:event_comboBoxMotifActionPerformed

    private void comboBoxPratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPratActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxPratActionPerformed

    private void btnValidationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidationActionPerformed

        //RECUPERATION DE LA DATE DE VISITE SELECTIONNEE DANS LE CALENDRIER
        int monthPicked = calendar.getMonthChooser().getMonth() + 1;

        String month;
        if (monthPicked < 10) {
            month = "0" + monthPicked;
        } else {
            month = "" + monthPicked;
        }
        int dayPicked = calendar.getDayChooser().getDay();
        String day;
        if (dayPicked < 10) {
            day = "0" + dayPicked;
        } else {
            day = "" + dayPicked;
        }

        int year = calendar.getYearChooser().getYear();
        String laDate = year + "-" + month + "-" + day;

        //RECUPERATION DU PRATICIEN
        String nomPrat = comboBoxPrat.getSelectedItem().toString();
        PraticienDAO prat1 = new PraticienDAO();
        int idPraticien = prat1.getIdPraticienByName(nomPrat);

        //RECUPERATION DES MEDICAMENTS
        //RECUPERATION DU COEFFICIENT ATTRIBUE
        int coef = Integer.parseInt(comboBoxCoef.getSelectedItem().toString());

        //RECUPERATION DU MOTIF DE LA VISITE
        String motifSelected = comboBoxMotif.getSelectedItem().toString();
        String motif;

        //Si le motif choisi dans la combobox est 'Autre' on enregistre le contenu de la text area prévue a cet effet comme motif
        if (motifSelected.equals("Autre")) {
            motif = textAreaMotif.getText();
        } else {
            motif = motifSelected;
        }

        //RECUPERATION DU BILAN DE LA VISITE
        String bilan = textAreaBilan.getText();

        //RECUPERATION DE L'ID DU VISITEUR CONNECTÉ
        //Instanciation d'un objet Rapport avec les données récupérées précédemment.
        RapportDAO rappDao = new RapportDAO();
        Rapport rappToAdd = new Rapport(User.matricule, idPraticien, laDate, bilan, motif, coef);

        prescription.setIdVisiteur(User.matricule);
        int idLastRapport = rappDao.getLastInserted();
        prescription.setRapNum(idLastRapport);
        rappToAdd.setPrescription(prescription);

        rappDao.insertRapport(rappToAdd);

        JOptionPane msgConnectError = new JOptionPane();
        msgConnectError.showMessageDialog(null, "Le rapport a bien été enregistré ! ", "Information", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnValidationActionPerformed

    private void btnAddMedocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMedocActionPerformed
        // TODO add your handling code here:
        if (comboBoxMedoc.getItemCount() < 1 || comboBoxMedoc.getSelectedItem().equals("")) {

        } else {

            String nomMedoc = comboBoxMedoc.getSelectedItem().toString();
            int qte = Integer.parseInt(comboBoxQte.getSelectedItem().toString());

            Medoc medocToAdd = new Medoc();
            MedocDAO meds2 = new MedocDAO();
            String refLegaleMedoc = meds2.findMedocByName(nomMedoc).getDepotLegal();
            medocToAdd.setDepotLegal(refLegaleMedoc);


            JLabel labelToAdd = new JLabel();
            labelToAdd.setText(nomMedoc + " - " + qte);
            labelToAdd.setAlignmentY(CENTER_ALIGNMENT);
            System.out.println(nomMedoc);


                prescription.addMedoc(medocToAdd);
                prescription.addMedocQte(qte);
                comboPresc.addItem(nomMedoc);


            //on remet la combo box famille de medoc sur le choix par défault, vide
            comboBoxFamille.setSelectedIndex(0);
            comboBoxQte.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnAddMedocActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here
        this.dispose();
        AccueilJFrame fenetre = new AccueilJFrame();
        fenetre.setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRappJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRappJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRappJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRappJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRappJFrame().setVisible(true);
            }
        });
    }

    private Prescription prescription = new Prescription();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMedoc;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnValidation;
    private javax.swing.JButton btnValider;
    private com.toedter.calendar.JCalendar calendar;
    private javax.swing.JComboBox<Integer> comboBoxCoef;
    private javax.swing.JComboBox<String> comboBoxFamille;
    private javax.swing.JComboBox<String> comboBoxMedoc;
    private javax.swing.JComboBox<String> comboBoxMotif;
    private javax.swing.JComboBox<String> comboBoxPrat;
    private javax.swing.JComboBox<Integer> comboBoxQte;
    private javax.swing.JComboBox<String> comboPresc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelAreaMotif;
    private javax.swing.JLabel labelPrescription;
    private javax.swing.JTextArea textAreaBilan;
    private javax.swing.JTextArea textAreaMotif;
    // End of variables declaration//GEN-END:variables
}
